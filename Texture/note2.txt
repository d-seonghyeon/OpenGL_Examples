Texture Refactoring

	왜 ImagePtr이나 imageUPtr이 아닌 image*를 인자로 쓰는가?
	
		//ImageUPtr: 이미지 인스턴스 소유권이 함수 안으로 넘어오게 됨
		//ImagePtr: 이미지 인스턴스 소유권을 고유함
		//Image*: 소유권과 상관없이 인스턴스에 접근





Mipmap

	화면 픽셀이 여러 텍스처 픽셀을 포함하게 될 경우를 위해서 작은 사이즈의 이미지를 미리 준비하는 기법

	1)가장 큰 이미지를 기본레벨 0으로 함
	2)가로세로 크기를 절반씩 줄인 이미지를 미리 계산하여 레벨을 1씩 증가시키며 저장

		512*512 이미지 ->level 0~9까지 생성

	3)원본 이미지 저장을 위해 필요한 메모리보다 1/3만큼을 더 소요


Multiple Textures

	텍스처를 shader program에 올바르게 제공하는 방법

		*glActiveTexture(textureSlot)함수로 현재 다루고자 하는 텍스처 슬롯을 선택

		*glBindTexture(textureType, textureld)함수로 현재 설정중인 텍스처 슬롯에 우리의 텍스처 오브젝트를 바인딩
		-> 호출 순서대로 바인딩

		*glGetUniformLocation()함수로 shader내의 sampler2D uniform 핸들을 얻어옴

		*glUniform1i()함수로 sampler 2D uniform에 텍스처 슬롯 인덱스를 입력



*이미지 상하 반전 이유


	보통 이미지는 좌상단을 원점으로 함
	opengl은 좌하단을 원점으로 함
	이미지 로딩시 상하를 반전시켜서 문제를 해결할 수 있음

	stbi_set_flip_vertically_on_load(true);